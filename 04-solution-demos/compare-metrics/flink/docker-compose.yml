version: '3.8'
services:

  # zookeeper
  zookeeper:
    #platform: linux/amd64
    image: bitnami/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net

  # kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "29093:29093"
    expose:
      - "9093"
      - "29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:29093, LISTENER_DOCKER_EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT, LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_AUTO_OFFSET_RESET: earliest 
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    networks:
     - kafka-net

  # kafka producer
  kafka-producer:
    build:
      context: .
      dockerfile: flink_producer/Dockerfile
    depends_on:
     - kafka
     - zookeeper
    environment:
      KAFKA_BOOTSTRAP_SERVERS: LISTENER_DOCKER_INTERNAL://kafka:29093
    restart: always
    networks:
     - kafka-net

  jobmanager:
    build: .
    depends_on:
      - kafka-producer
    ports:
      - "8082:8081"
      - "9249:9249"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        checkpointing.mode: exactly_once
        execution.checkpointing.interval: 60s
        rest.flamegraph.enabled: true   
    networks:
     - kafka-net

  taskmanager:
    build: .
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 5   
    networks:
     - kafka-net

  sql-client:
    build: .
    command: bin/sql-client.sh
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
    networks:
     - kafka-net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"  
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml  
    networks:
      - kafka-net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"  
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - "./grafana_configs/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml"
      - "./grafana_configs/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml"
      - "./grafana_configs:/var/lib/grafana/dashboards"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
    name: kafka-net